"""Initial database schema

Revision ID: 78c10d7da504
Revises: 
Create Date: 2025-07-11 17:30:16.094325

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78c10d7da504'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('isbn', sa.String(length=20), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('author', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('publisher', sa.String(length=200), nullable=True),
    sa.Column('publication_date', sa.DateTime(), nullable=True),
    sa.Column('hardcover_id', sa.String(length=100), nullable=True),
    sa.Column('bookshop_url', sa.String(length=500), nullable=True),
    sa.Column('genre', sa.String(length=100), nullable=True),
    sa.Column('format', sa.String(length=50), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_books_hardcover_id'), 'books', ['hardcover_id'], unique=False)
    op.create_index(op.f('ix_books_isbn'), 'books', ['isbn'], unique=True)
    op.create_table('customers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('square_customer_id', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('square_customer_id')
    )
    op.create_index(op.f('ix_customers_phone'), 'customers', ['phone'], unique=True)
    op.create_table('rate_limits',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('identifier', sa.String(length=100), nullable=False),
    sa.Column('limit_type', sa.String(length=50), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('window_start', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_expires_at', 'rate_limits', ['expires_at'], unique=False)
    op.create_index('idx_identifier_type', 'rate_limits', ['identifier', 'limit_type'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('customer_id', sa.String(length=36), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('last_message_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('mentioned_books', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_phone'), 'conversations', ['phone'], unique=False)
    op.create_table('inventory',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('book_id', sa.String(length=36), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reserved', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('book_id', 'location', name='uq_book_location')
    )
    op.create_table('messages',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('conversation_id', sa.String(length=36), nullable=False),
    sa.Column('direction', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_conversation_timestamp', 'messages', ['conversation_id', 'timestamp'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('customer_id', sa.String(length=36), nullable=False),
    sa.Column('conversation_id', sa.String(length=36), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('square_order_id', sa.String(length=100), nullable=True),
    sa.Column('payment_link', sa.String(length=500), nullable=True),
    sa.Column('payment_status', sa.String(length=50), nullable=False),
    sa.Column('fulfillment_type', sa.String(length=50), nullable=False),
    sa.Column('shipping_address', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('order_id', sa.String(length=36), nullable=False),
    sa.Column('book_id', sa.String(length=36), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_table('orders')
    op.drop_index('idx_conversation_timestamp', table_name='messages')
    op.drop_table('messages')
    op.drop_table('inventory')
    op.drop_index(op.f('ix_conversations_phone'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index('idx_identifier_type', table_name='rate_limits')
    op.drop_index('idx_expires_at', table_name='rate_limits')
    op.drop_table('rate_limits')
    op.drop_index(op.f('ix_customers_phone'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_books_isbn'), table_name='books')
    op.drop_index(op.f('ix_books_hardcover_id'), table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
