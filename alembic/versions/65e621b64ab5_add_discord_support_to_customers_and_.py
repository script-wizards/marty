"""add discord support to customers and conversations

Revision ID: 65e621b64ab5
Revises: 22a6418060c5
Create Date: 2025-07-25 20:37:17.425373

"""
from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "65e621b64ab5"
down_revision: str | Sequence[str] | None = "22a6418060c5"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "books",
        "publication_date",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "books",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "books",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.add_column(
        "conversations",
        sa.Column("discord_user_id", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "conversations",
        sa.Column("discord_channel_id", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "conversations",
        sa.Column("discord_guild_id", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "conversations", sa.Column("platform", sa.String(length=50), nullable=False)
    )
    op.alter_column(
        "conversations", "phone", existing_type=sa.VARCHAR(length=20), nullable=True
    )
    op.alter_column(
        "conversations",
        "last_message_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "conversations",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.create_index(
        op.f("ix_conversations_discord_user_id"),
        "conversations",
        ["discord_user_id"],
        unique=False,
    )
    op.add_column(
        "customers", sa.Column("discord_user_id", sa.String(length=255), nullable=True)
    )
    op.add_column(
        "customers", sa.Column("discord_username", sa.String(length=255), nullable=True)
    )
    op.add_column(
        "customers", sa.Column("platform", sa.String(length=50), nullable=False)
    )
    op.alter_column(
        "customers", "phone", existing_type=sa.VARCHAR(length=20), nullable=True
    )
    op.alter_column(
        "customers",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "customers",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.create_index(
        op.f("ix_customers_discord_user_id"),
        "customers",
        ["discord_user_id"],
        unique=True,
    )
    op.alter_column(
        "inventory",
        "last_updated",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "messages",
        "timestamp",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "rate_limits",
        "window_start",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "rate_limits",
        "expires_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "rate_limits",
        "expires_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "rate_limits",
        "window_start",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "orders",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "messages",
        "timestamp",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "inventory",
        "last_updated",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_customers_discord_user_id"), table_name="customers")
    op.alter_column(
        "customers",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "customers",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "customers", "phone", existing_type=sa.VARCHAR(length=20), nullable=False
    )
    op.drop_column("customers", "platform")
    op.drop_column("customers", "discord_username")
    op.drop_column("customers", "discord_user_id")
    op.drop_index(op.f("ix_conversations_discord_user_id"), table_name="conversations")
    op.alter_column(
        "conversations",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "conversations",
        "last_message_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "conversations", "phone", existing_type=sa.VARCHAR(length=20), nullable=False
    )
    op.drop_column("conversations", "platform")
    op.drop_column("conversations", "discord_guild_id")
    op.drop_column("conversations", "discord_channel_id")
    op.drop_column("conversations", "discord_user_id")
    op.alter_column(
        "books",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "books",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "books",
        "publication_date",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
